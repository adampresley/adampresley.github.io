<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Couchdb on Adam.Blog()</title>
    <link>http://adampresley.com/tags/couchdb/</link>
    <description>Recent content in Couchdb on Adam.Blog()</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 10 Sep 2010 10:24:00 +0000</lastBuildDate>
    <atom:link href="http://adampresley.com/tags/couchdb/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>My Resume - The Code and Summary</title>
      <link>http://adampresley.com/post/my-resume-the-code-and-summary/</link>
      <pubDate>Fri, 10 Sep 2010 10:24:00 +0000</pubDate>
      
      <guid>http://adampresley.com/post/my-resume-the-code-and-summary/</guid>
      <description>&lt;p&gt;Back by popular demand I have put the code for my online resume
application up for &lt;a href=&#34;http://dl.dropbox.com/u/5726689/blog-downloads/resume.adampresley.com.zip&#34;&gt;download&lt;/a&gt;!
Not too long ago I re-created my online resume in Railo using the wonderful small FW/1 framework. For the
persistence layer I used Apache CouchDB and my ColdFusion wrapper for
the Java CouchDB4J library, CouchDB4CF. Since then I have received
numerous requests to put the code up online. So this post is doing just
that. If you want to look over the code, the first order of business is
to &lt;a href=&#34;http://dl.dropbox.com/u/5726689/blog-downloads/resume.adampresley.com.zip&#34;&gt;download&lt;/a&gt; it.&lt;/p&gt;

&lt;p&gt;To begin extract the contents of the ZIP file into any directory of your
choice. There should be two sub-directories, &lt;strong&gt;application&lt;/strong&gt; and
&lt;strong&gt;tomcat&lt;/strong&gt;. You shouldn&amp;rsquo;t need to do much of anything in the
&lt;strong&gt;application&lt;/strong&gt; directory, but you will need to do a slight
configuration change in the &lt;strong&gt;tomcat/conf&lt;/strong&gt; directory. In this
directory open up &lt;strong&gt;server.xml&lt;/strong&gt; and near the bottom find the XML
node for the localhost host. There is a node inside of this named
&lt;strong&gt;Context&lt;/strong&gt;, and the &lt;strong&gt;docBase&lt;/strong&gt; path will need to be modified
to match where you have extracted the ZIP file. Save those changes.&lt;/p&gt;

&lt;p&gt;Next you will need to actually have an instance of the Apache CouchDB
server running. It is beyond the scope of this blog post to detail how
to actually setup Couch, but there are enough tutorials out there to get
you started. In fact you will likely start at
&lt;a href=&#34;http://couchdb.apache.org/&#34;&gt;http://couchdb.apache.org/&lt;/a&gt;. Get Couch installed and setup. Once you&amp;rsquo;ve
done this your will need to log into Futon and create a database called
&amp;ldquo;resume&amp;rdquo;. From here you probably want some data, so I have included a
copy of my resume JSON object that can be inserted using the command
line (CURL is a nice option). Here is a &lt;a href=&#34;http://morethanseven.net/2007/12/11/using-curl-to-play-with-couchdb.html&#34;&gt;blog post&lt;/a&gt;
on using CURL to put data into Couch. You can find the JSON data in the
&lt;strong&gt;application/doc&lt;/strong&gt; directory. There are two documents to import.&lt;/p&gt;

&lt;p&gt;If you thought there was more than that then I am sorry to say that you
should just be able to start up the app. First make sure Couch is
running. Then browse to the &lt;strong&gt;tomcat/bin&lt;/strong&gt; and run either
&lt;strong&gt;startup.bat&lt;/strong&gt; or &lt;strong&gt;startup.sh&lt;/strong&gt;, depending on your OS. From
here you should be able to browse to &lt;strong&gt;&lt;a href=&#34;http://localhost:8080&#34;&gt;http://localhost:8080&lt;/a&gt;&lt;/strong&gt; and
see my resume. To get to the Railo web administrator you can just browse
to &lt;strong&gt;&lt;a href=&#34;http://localhost:8080/railo-context/admin.cfm&#34;&gt;http://localhost:8080/railo-context/admin.cfm&lt;/a&gt;&lt;/strong&gt; and use the
password &amp;ldquo;password&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s the summarized breakdown. If anyone has any questions please do
not hesitate to contact me and I will try to answer as swiftly as my
work schedule allows! Happy coding!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My Resume on ColdFusion &#43; FW/1 &#43; CouchDB</title>
      <link>http://adampresley.com/post/my-resume-on-coldfusion-fw1-couchdb/</link>
      <pubDate>Tue, 31 Aug 2010 13:29:00 +0000</pubDate>
      
      <guid>http://adampresley.com/post/my-resume-on-coldfusion-fw1-couchdb/</guid>
      <description>&lt;p&gt;The last few days I decided I wanted to play around with Apache&amp;rsquo;s
CouchDB, one of the more popular database engines in the No-SQL
movement. For those who have never heard of it &lt;a href=&#34;http://couchdb.apache.org/&#34;&gt;CouchDB&lt;/a&gt; is a database
engine written in Erlang, and is an Apache Foundation project. One of
the neatest things about CouchDB is that the API is based entirely on
RESTful JSON services, so all command to it are HTTP commands like PUT,
GET, POST, and DELETE. All data is stored as JSON objects known as
&amp;ldquo;documents&amp;rdquo;. When you have a chance take a look at it.&lt;/p&gt;

&lt;p&gt;For me the project I always fall back to when I want to try something
new is my Resume project. I&amp;rsquo;ve kept my resume online for several years
now. My first version of it was to proof-of-concept my PHP framework,
and this worked well for a long time. I then modified it to work with
ColdFusion, Groovy, and Hibernate with MySQL as the persistence layer.
That was fun too. Now I set out to redo this in ColdFusion with CouchDB
as the persistence layer.&lt;/p&gt;

&lt;p&gt;The result is a ColdFusion application using Sean Corfield&amp;rsquo;s excellent
&lt;a href=&#34;http://fw1.riaforge.org/&#34;&gt;FW/1&lt;/a&gt; framework, my &lt;a href=&#34;https://sourceforge.net/projects/couchdb4cf/&#34;&gt;CouchDB4CF&lt;/a&gt; Java facade, and Apache CouchDB.
Check it out at &lt;a href=&#34;http://resume.adampresley.com&#34;&gt;http://resume.adampresley.com&lt;/a&gt;. I&amp;rsquo;ll post more soon
about how it is built.&lt;/p&gt;

&lt;p&gt;Notice: This site is no longer available&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>